name: Reusable Build Workflow

on:
    workflow_call:
        inputs:
            branch:
                required: true
                type: string
            # needs to match the folder name in the dist directory
            # should be equal with project name
            output-name:
                required: true
                type: string
            is-prerelease:
                required: true
                type: boolean
        secrets:
            NPM_TOKEN:
                required: true
            FA_TOKEN:
                required: true
            GITHUB_TOKEN:
                required: true

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.16.3]
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            # more specific than v2
            - uses: actions/checkout@1e204e9a9253d643386038d443f96446fa156a97
              with:
                ref: ${{ inputs.branch }}
            # If package-lock.json does not change, the node modules are used from the cache to improve the speed

            - name: Cache node modules
              # more specific than v2
              uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-

            - name: Node ${{ matrix.node-version }}
              # more specific than v2-beta
              uses: actions/setup-node@27082cecf3ff7a1742dbd5e12605f0cb59dce2d9
              with:
                node-version: ${{ matrix.node-version }}

            - name: npm set config for FA
              run: npm config set '//npm.fontawesome.com/:_authToken' "${{ secrets.FA_TOKEN }}"

            - name: npm set config for NPM
              run: npm config set '//registry.npmjs.org/:_authToken' "${{ secrets.NPM_TOKEN }}"

            - name: npm install
              run: npm ci

            - name: npm run build
              run: npm run build:prod

            - name: bump npm version
              run: npm version patch --no-git-tag-version

            - name: Read package.json version
              # more specific than v1
              uses: tyankatsu0105/read-package-version-actions@b660c21be1531c1ad23c0bbfb72dfe64c9af05a6
              id: package-version
              
            - name: git
              run: |
                # adding the last commit as comment in index.html
                printf '<!-- App Version :%s Build Date:%s -->\n' "$(git rev-parse HEAD)" "$(TZ='Germany/Berlin' date)"  >> dist/${{ inputs.output-name }}/index.html

            # more specific than v1
            - uses: papeloto/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
              with:
                  files: dist/${{ inputs.output-name }}/
                  dest: ${{ inputs.output-name }}-${{ inputs.branch }}.zip

            - name: Create Release
              id: create_release
              # more specific than v1
              uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{steps.package-version.outputs.version}}-${{ inputs.branch }}
                  release_name: Release ${{steps.package-version.outputs.version}}-${{ inputs.branch }}
                  draft: false
                  prerelease: ${{ inputs.is-prerelease }}

            - name: Upload Release Asset
              id: upload-release-asset
              # more specific than v1
              uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./${{ inputs.output-name }}-${{ inputs.branch }}.zip
                  asset_name: ${{ inputs.output-name }}-${{ inputs.branch }}.zip
                  asset_content_type: application/zip

            - name: cleanup zip file
              run: rm -f ./${{ inputs.output-name }}-${{ inputs.branch }}.zip

            - name: create commit
              # more specific than v4
              uses: stefanzweifel/git-auto-commit-action@abd87b7d94702070bef78dc1d56b6928b8fa9ecc
              with:
                  commit_message: ${{steps.package-version.outputs.version}}
                  branch: ${{ inputs.branch }}
